{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport Vue from \"vue\";\nimport VueRouter from \"vue-router\";\nimport LoginPage from \"../views/LoginView.vue\";\nimport RegisterPage from \"../views/RegisterView.vue\";\nimport Dashboard from \"../views/Dashboard.vue\";\nimport store from \"../store\";\nVue.use(VueRouter);\nconst routes = [{\n  path: \"/\",\n  component: LoginPage\n}, {\n  path: \"/register\",\n  component: RegisterPage\n}, {\n  path: \"/dashboard\",\n  component: Dashboard,\n  meta: {\n    requiresAuth: true\n  }\n}];\nconst router = new VueRouter({\n  mode: \"history\",\n  base: process.env.BASE_URL || \"/\",\n  routes\n});\n\n// Guardia global para rutas que requieren autenticación\nrouter.beforeEach((to, from, next) => {\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (store.getters.isAuthenticated) {\n      next();\n    } else {\n      next(\"/\");\n    }\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","LoginPage","RegisterPage","Dashboard","store","use","routes","path","component","meta","requiresAuth","router","mode","base","process","env","BASE_URL","beforeEach","to","from","next","matched","some","record","getters","isAuthenticated"],"sources":["C:/Users/Esteban-Mallea/Desktop/frontend/sensor-front-vue/src/router/index.js"],"sourcesContent":["import Vue from \"vue\";\nimport VueRouter from \"vue-router\";\nimport LoginPage from \"../views/LoginView.vue\";\nimport RegisterPage from \"../views/RegisterView.vue\";\nimport Dashboard from \"../views/Dashboard.vue\";\nimport store from \"../store\";\n\nVue.use(VueRouter);\n\nconst routes = [\n  { path: \"/\", component: LoginPage },\n  { path: \"/register\", component: RegisterPage },\n  {\n    path: \"/dashboard\",\n    component: Dashboard,\n    meta: { requiresAuth: true },\n  },\n];\n\nconst router = new VueRouter({\n  mode: \"history\",\n  base: process.env.BASE_URL || \"/\",\n  routes,\n});\n\n// Guardia global para rutas que requieren autenticación\nrouter.beforeEach((to, from, next) => {\n  if (to.matched.some((record) => record.meta.requiresAuth)) {\n    if (store.getters.isAuthenticated) {\n      next();\n    } else {\n      next(\"/\");\n    }\n  } else {\n    next();\n  }\n});\n\nexport default router;\n"],"mappings":";;AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,KAAK,MAAM,UAAU;AAE5BL,GAAG,CAACM,GAAG,CAACL,SAAS,CAAC;AAElB,MAAMM,MAAM,GAAG,CACb;EAAEC,IAAI,EAAE,GAAG;EAAEC,SAAS,EAAEP;AAAU,CAAC,EACnC;EAAEM,IAAI,EAAE,WAAW;EAAEC,SAAS,EAAEN;AAAa,CAAC,EAC9C;EACEK,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAEL,SAAS;EACpBM,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,CACF;AAED,MAAMC,MAAM,GAAG,IAAIX,SAAS,CAAC;EAC3BY,IAAI,EAAE,SAAS;EACfC,IAAI,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,IAAI,GAAG;EACjCV;AACF,CAAC,CAAC;;AAEF;AACAK,MAAM,CAACM,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,IAAIF,EAAE,CAACG,OAAO,CAACC,IAAI,CAAEC,MAAM,IAAKA,MAAM,CAACd,IAAI,CAACC,YAAY,CAAC,EAAE;IACzD,IAAIN,KAAK,CAACoB,OAAO,CAACC,eAAe,EAAE;MACjCL,IAAI,CAAC,CAAC;IACR,CAAC,MAAM;MACLA,IAAI,CAAC,GAAG,CAAC;IACX;EACF,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeT,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}