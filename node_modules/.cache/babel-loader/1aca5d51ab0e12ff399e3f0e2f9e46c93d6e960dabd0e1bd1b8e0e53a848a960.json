{"ast":null,"code":"import Vue from \"vue\";\nimport Vuex from \"vuex\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    user: null,\n    // El estado inicial es null cuando no hay un usuario autenticado\n    sensors: [{\n      id: 1,\n      name: \"Sensor 1\",\n      temperature: 23,\n      humidity: 60\n    }, {\n      id: 2,\n      name: \"Sensor 2\",\n      temperature: 25,\n      humidity: 55\n    }]\n  },\n  mutations: {\n    setUser(state, user) {\n      state.user = user;\n    },\n    logout(state) {\n      state.user = null;\n    },\n    updateSensors(state, payload) {\n      state.sensors = payload;\n    }\n  },\n  actions: {\n    setUser({\n      commit\n    }, user) {\n      commit(\"setUser\", user);\n    },\n    logout({\n      commit\n    }) {\n      commit(\"logout\");\n    },\n    fetchSensors({\n      commit\n    }) {\n      // Aquí puedes integrar llamada a backend o Firebase\n      commit(\"updateSensors\", []);\n    }\n  },\n  getters: {\n    isAuthenticated: state => !!state.user,\n    getUser: state => state.user\n  },\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","use","Store","state","user","sensors","id","name","temperature","humidity","mutations","setUser","logout","updateSensors","payload","actions","commit","fetchSensors","getters","isAuthenticated","getUser","modules"],"sources":["C:/Users/Esteban-Mallea/Desktop/frontend/sensor-front-vue/src/store/index.js"],"sourcesContent":["import Vue from \"vue\";\nimport Vuex from \"vuex\";\n\nVue.use(Vuex);\n\nexport default new Vuex.Store({\n  state: {\n    user: null, // El estado inicial es null cuando no hay un usuario autenticado\n    sensors: [\n      { id: 1, name: \"Sensor 1\", temperature: 23, humidity: 60 },\n      { id: 2, name: \"Sensor 2\", temperature: 25, humidity: 55 },\n    ],\n  },\n  mutations: {\n    setUser(state, user) {\n      state.user = user;\n    },\n    logout(state) {\n      state.user = null;\n    },\n    updateSensors(state, payload) {\n      state.sensors = payload;\n    },\n  },\n  actions: {\n    setUser({ commit }, user) {\n      commit(\"setUser\", user);\n    },\n    logout({ commit }) {\n      commit(\"logout\");\n    },\n    fetchSensors({ commit }) {\n      // Aquí puedes integrar llamada a backend o Firebase\n      commit(\"updateSensors\", []);\n    },\n  },\n  getters: {\n    isAuthenticated: (state) => !!state.user,\n    getUser: (state) => state.user,\n  },\n  modules: {},\n});\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AAEvBD,GAAG,CAACE,GAAG,CAACD,IAAI,CAAC;AAEb,eAAe,IAAIA,IAAI,CAACE,KAAK,CAAC;EAC5BC,KAAK,EAAE;IACLC,IAAI,EAAE,IAAI;IAAE;IACZC,OAAO,EAAE,CACP;MAAEC,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,UAAU;MAAEC,WAAW,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAG,CAAC,EAC1D;MAAEH,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,UAAU;MAAEC,WAAW,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAG,CAAC;EAE9D,CAAC;EACDC,SAAS,EAAE;IACTC,OAAOA,CAACR,KAAK,EAAEC,IAAI,EAAE;MACnBD,KAAK,CAACC,IAAI,GAAGA,IAAI;IACnB,CAAC;IACDQ,MAAMA,CAACT,KAAK,EAAE;MACZA,KAAK,CAACC,IAAI,GAAG,IAAI;IACnB,CAAC;IACDS,aAAaA,CAACV,KAAK,EAAEW,OAAO,EAAE;MAC5BX,KAAK,CAACE,OAAO,GAAGS,OAAO;IACzB;EACF,CAAC;EACDC,OAAO,EAAE;IACPJ,OAAOA,CAAC;MAAEK;IAAO,CAAC,EAAEZ,IAAI,EAAE;MACxBY,MAAM,CAAC,SAAS,EAAEZ,IAAI,CAAC;IACzB,CAAC;IACDQ,MAAMA,CAAC;MAAEI;IAAO,CAAC,EAAE;MACjBA,MAAM,CAAC,QAAQ,CAAC;IAClB,CAAC;IACDC,YAAYA,CAAC;MAAED;IAAO,CAAC,EAAE;MACvB;MACAA,MAAM,CAAC,eAAe,EAAE,EAAE,CAAC;IAC7B;EACF,CAAC;EACDE,OAAO,EAAE;IACPC,eAAe,EAAGhB,KAAK,IAAK,CAAC,CAACA,KAAK,CAACC,IAAI;IACxCgB,OAAO,EAAGjB,KAAK,IAAKA,KAAK,CAACC;EAC5B,CAAC;EACDiB,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}